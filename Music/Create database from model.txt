Create database from model
------------------------------

1. In project DbContextLib AppConfig.cs in class AppConfig set Application Name to Music

2. Ensure your  "appsettings.json" and "appsettings.Development.json" have your Database Connection Strings
 
3. Compile and Run DbAppConsole. 
   Output to the Console should be something like:

Please ensure appsettings.Development.json is copied to /Users/Martin/.local/share/SQL Databases/<Applcation Name>



4. Copy "appsettings.json" and "appsettings.Development.json" to the directory indicated in step1 and re-run the program
	- Your should have the Database Connection String as output on the console
   Output to the Console should now be something like:

AppSettings Directory: /Users/Martin/.local/share/SQL Databases/<Applcation Name>
Database type: SQLServer
Connection used: SQLServer-seidowebservice-docker

Error: Database could not be seeded. Ensure the SQLServer database is correctly created



5. In Windows, open PMC and ensure that the Class Library, DbContextLib, is the default project.
   On Mac open a terminal in DbContextLib directory.



6. Create Database migrations.

On macOS in the terminal, type below commands. After each migration you will get a success confirmation
dotnet ef migrations add initial_migration --context SqlServerDbContext --output-dir Migrations/SqlServerMigrations

NOTE: Do below only if you want other databases as well:
dotnet ef migrations add initial_migration --context MySqlDbContext --output-dir Migrations/MySqlMigrations
dotnet ef migrations add initial_migration --context PostgresDbContext --output-dir Migrations/PostgresMigrations
dotnet ef migrations add initial_migration --context SqliteDbContext --output-dir Migrations/SqliteMigrations

On Windows in the PCM terminal, type below commands. After each migration you will get a success confirmation
add-migration initial_migration -context SqlServerDbContext -outputdir Migrations/SqlServerMigrations



7. Commit the migrations to the Database (create the databases).

On macOS in the terminal, type below commands. After each committment you will get a success confirmation
dotnet ef database update --context SqlServerDbContext

NOTE: Do below only if you want other databases as well:
dotnet ef database update --context MySqlDbContext
dotnet ef database update --context PostgresDbContext
dotnet ef database update --context SqliteDbContext

On Windows in the PCM terminal, type below commands. After each migration you will get a success confirmation
update-database -context SqlServerDbContext



8. Run the program and each databases should seeded and queried using Linq